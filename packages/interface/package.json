{
  "name": "@3cities/interface",
  "version": "1.0.0",
  "private": true,
  "homepage": "./",
  "browserslist": {
    "production": [
      "supports bigint and supports cryptography and supports fetch and supports textencoder",
      "not ie <= 99",
      "not android <= 4.4.4",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "dependencies": {
    "@3cities/core": "^1.0.0",
    "@3cities/eth-transfer-proxy": "^1.0.0",
    "@3cities/verifier": "^1.0.0",
    "@walletconnect/ethereum-provider": "^2.16.1",
    "connectkit": "^1.8.2",
    "localforage": "^1.10.0",
    "qr-code-styling": "^1.6.0-rc.1",
    "react": "^18.3.1",
    "react-currency-input-field": "^3.8.0",
    "react-dom": "^18.3.1",
    "react-icons": "^5.2.1",
    "react-router-dom": "^6.24.0",
    "react-use-clipboard": "^1.0.9",
    "sonner": "^1.5.0",
    "use-immer": "^0.10.0"
  },
  "devDependencies": {
    "@testing-library/dom": "10.3.1",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^14.0.0",
    "@testing-library/user-event": "^14.4.3",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "autoprefixer": "^10.4.19",
    "depcheck": "^1.4.7",
    "env-cmd": "^10.1.0",
    "eslint-plugin-react": "^7.34.3",
    "eslint-plugin-react-hooks": "^4.6.2",
    "postcss": "^8.4.38",
    "postcss-import": "^16.1.0",
    "react-scripts": "https://gitpkg.now.sh/ryanberckmans/create-react-app/packages/react-scripts?6544f27623d9b156cee63774f7bf1a78ba8f1aab",
    "source-map-explorer": "^2.5.3",
    "tailwindcss": "^3.4.4",
    "ts-macros": "^2.6.0",
    "ts-prune": "^0.10.3"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "scripts": {
    "analyze": "source-map-explorer 'build/static/js/*.js'",
    "build-raw": "REACT_APP_GIT_COMMIT=`git rev-parse --short HEAD` REACT_APP_GIT_COMMIT_DATE=`TZ=UTC0 git show --quiet --date=local --format='%cd UTC'` react-scripts build # run a regular build in the context of an env that's already been set; WARNING build-raw and start-raw each separately define the computation of env vars REACT_APP_GIT_COMMIT and REACT_APP_GIT_COMMIT_DATE, and these must be identical in both places",
    "build:dev": "yarn env-cmd -e dev yarn build-raw # run a production build using dev env, eg. with source maps enabled for use with 'yarn analyze'",
    "build:prod-test": "if [ -z \"$(git status --porcelain)\" ]; then npx env-cmd -e prod-test yarn build-raw; else echo 'refusing to run prod-test build with uncommited changes in the working directory'; exit 1; fi",
    "build:prod": "if [ -z \"$(git status --porcelain)\" ]; then npx env-cmd -e prod npm run build-raw; else echo 'refusing to run production build with uncommited changes in the working directory'; exit 1; fi",
    "build": "yarn build:prod",
    "browserslist": "npx browserslist",
    "depcheck": "depcheck",
    "eject": "react-scripts eject",
    "lint": "eslint . --max-warnings 0",
    "start-raw": "REACT_APP_GIT_COMMIT=`git rev-parse --short HEAD` REACT_APP_GIT_COMMIT_DATE=`TZ=UTC0 git show --quiet --date=local --format='%cd UTC'` react-scripts start # run dev mode in the context of an env that's already been set; WARNING build-raw and start-raw each separately define the computation of env vars REACT_APP_GIT_COMMIT and REACT_APP_GIT_COMMIT_DATE, and these must be identical in both places",
    "start:dev": "yarn env-cmd -e dev yarn start-raw",
    "start:prod-test": "yarn env-cmd -e prod-test yarn start-raw",
    "start:prod": "yarn env-cmd -e prod yarn start-raw",
    "start": "yarn start:dev",
    "test": "react-scripts test",
    "ts-prune": "ts-prune"
  }
}